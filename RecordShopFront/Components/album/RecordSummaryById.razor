@using System.Text.Json
@using System.Text
<div>
    <EditForm Model="Record" OnValidSubmit="ValidSubmit">
        <label for="Title">Title </label>
        <InputText @bind-Value="Record.Title" />
        <label for="Description">Description</label>
        <InputText @bind-Value="Record.Description" />
        <label>Genres</label>

        @foreach (var genre in AllGenres){
            <div>
                <input type="checkbox" checked="@IsChecked(genre)" value="@genre" @onchange="(e) => UpdateSelectedGenres(e, genre)" /> @genre.ToString()
            </div>
        }


        <button type="submit">Save</button>
    </EditForm>
</div>





@code {
    [Parameter]
    public AlbumReadDto Record { get; set; }
    private List<Genre> AllGenres { get; set; } = new List<Genre>();
    private HashSet<Genre> SelectedGenres { get; set; } = new HashSet<Genre>();
    


    private void ValidSubmit()
    {
        Record.Genres.Clear();
        foreach(var genre in SelectedGenres){
            
            Record.Genres.Add(new AlbumGenreReadDto { AlbumId = Record.Id, Genre = genre });
        }
        HttpClient httpClient = new HttpClient();
        var content = new StringContent(JsonSerializer.Serialize(Record), Encoding.UTF8, "application/json");
        var response = httpClient.PostAsync("https://localhost:7097/api/album", content).Result;
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Success");
        }
        else
        {
            Console.WriteLine("Fail");
        }
    }
    protected override async Task OnInitializedAsync()
    {
        AllGenres = Enum.GetValues(typeof(Genre)).Cast<Genre>().ToList();
        foreach (var genreDto in Record.Genres)
        {
            if (Enum.TryParse<Genre>(genreDto.Genre.ToString(), out var genre))
            {
                SelectedGenres.Add(genre);
            }
        }
        
    }
    private void UpdateSelectedGenres(ChangeEventArgs e, Genre genre)
    {
        var isChecked = (bool)e.Value;
        if (isChecked)
        {
            SelectedGenres.Add(genre);
        }
        else
        {
            SelectedGenres.Remove(genre);
        }
    }
    private bool IsChecked(Genre genre)
    {
        return SelectedGenres.Contains(genre);
    }
    

}
