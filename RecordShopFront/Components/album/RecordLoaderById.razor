@inject IHttpClientFactory ClientFactory
@using RecordShopFront.Components.album
@using System.Text.Json
@using System.Text

@if (Album == null)
{
    <Loader Message="Loading Records" />
}
else
{
    

    <CascadingValue Value="@Album">
        <RecordSummaryById Album="Album"></RecordSummaryById>
    </CascadingValue>
}

@code {
    [Parameter]
    public int id { get; set; }
    AlbumReadDto? Album = new AlbumReadDto();
    //private List<ArtistReadDto> AllArtists = new List<ArtistReadDto>();
    //private HashSet<Genre> SelectedGenres { get; set; } = new HashSet<Genre>();
    //public List<ArtistReadDto> SelectedArtists { get; set; } = new List<ArtistReadDto>();
    //private List<int> SelectedArtistIds { get; set; } = new List<int>();
    //private List<Genre> AllGenres = new List<Genre>();

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("MyHttpClient");
        Album = await client.GetFromJsonAsync<AlbumReadDto>($"album/{id}");
        //AllArtists = await client.GetFromJsonAsync<List<ArtistReadDto>>("artist");
        //AllGenres = Enum.GetValues(typeof(Genre)).Cast<Genre>().ToList();
        //SelectedArtistIds = Album.ArtistJunction.Select(j => j.Artist.Id).ToList();
    }
}
