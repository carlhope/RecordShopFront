@inject IHttpClientFactory ClientFactory
@using RecordShopFront.Components.album
@using System.Text.Json
@using System.Text
@using RecordShopFront.models

@if (!isLoaded)
{
    <Loader Message="Loading Records" />
}
else if (Album == null)
{
    <p>Album not found.</p>
}
else
{
    

   
        <RecordSummaryById Album="Album"></RecordSummaryById>
  
}

@code {
    [Parameter]
    public int id { get; set; }
    AlbumModel? Album = new AlbumModel();
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("MyHttpClient");
        var response = await client.GetAsync($"album/{id}");

        if (response.IsSuccessStatusCode)
        {
            Album = await response.Content.ReadFromJsonAsync<AlbumModel>();
            Console.WriteLine(Album.Title);
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
        {
            Console.WriteLine($"Album with ID {id} not found.");
            Album = null;
        }
        else
        {
            Console.WriteLine($"Unexpected error: {response.StatusCode}");
            Album = null;
        }

        isLoaded = true;
    }
}
